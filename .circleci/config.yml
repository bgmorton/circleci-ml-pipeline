version: 2.1

# Define custom commands for this config
# See https://circleci.com/docs/reusing-config/#authoring-reusable-commands
commands:
  check-python:
    steps:
      - run:
          command: python3 --version
          name: Check Python version
      - run:
          command: pip3 --version
          name: Check Pip version
  create-env:
    steps:
      - run:
          # Environment variables must be configured in CircleCI project or in a context
          command: |
            cat \<<- EOF > .env
            DEPLOY_SERVER_HOSTNAME=$DEPLOY_SERVER_HOSTNAME
            DEPLOY_SERVER_USERNAME=$DEPLOY_SERVER_USERNAME
            DEPLOY_SERVER_PASSWORD=$DEPLOY_SERVER_PASSWORD
            DEPLOY_SERVER_PATH=$DEPLOY_SERVER_PATH
            EOF
          name: Create .env file containing secrets
  wait-5:
    steps:
      - run:
          command: sleep 5
          name: Wait 5 seconds


# Define custom jobs for this config
# See: https://circleci.com/docs/jobs-steps/
jobs:
  install-build:
    # For running on CircleCI's self-hosted runners - details taken from environment variables
    machine: true
    resource_class: bgmorton/runner-test # Update this to reflect your self-hosted runner resource class details
    # For running on CircleCI's compute resources
    # docker:
    #   - image: cimg/python:3.11.4
    steps:
      - checkout # Check out the code in the project directory
      - check-python # Invoke command "check-python"
      - create-env     
      - run: 
          command: sh ./tools/install.sh
          name: Run script to install dependencies
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is
          # taken to be the root directory of the workspace.
          root: .
          # Must be relative path from root
          paths:
            - venv
            - training_data
            - .env
  train-test-package:
    # For running on CircleCI's self-hosted runners - details taken from environment variables
    machine: true
    resource_class: bgmorton/runner-test # Update this to reflect your self-hosted runner resource class details
    # For running on CircleCI's compute resources
    # docker:
    #   - image: cimg/python:3.11.4
    steps: # Steps in jobs are run sequentially
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: /tmp/workspace
      - run:
          command: python3 ./ml/1_build.py
          name: Build the model
      - run:
          command: python3 ./ml/2_train.py
          name: Train the model
      - run:
          command: python3 ./ml/3_test.py
          name: Test the model
      - run:
          command: python3 ./ml/4_package.py
          name: Package the model  
  retrain-package:
    # For running on CircleCI's self-hosted runners - details taken from environment variables
    machine: true
    resource_class: bgmorton/runner-test # Update this to reflect your self-hosted runner resource class details
    # For running on CircleCI's compute resources
    # docker:
    #   - image: cimg/python:3.11.4
    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: /tmp/workspace
      - run:
          command: python3 ./ml/1_build.py
          name: Rebuild testing/training data
      - run:
          command: python3 ./ml/6_retrain.py
          name: Retrain the model
      - run:
          command: python3 ./ml/4_package.py
          name: Package the model  
      - run:
          # You could trigger custom notifications here so that the person responsible for a particular job is notified via email, Slack, etc.
          name: Run on fail status
          command: |
              echo "I am result of above failed job" 
          when: on_fail
  deploy:
    # For running on CircleCI's self-hosted runners - details taken from environment variables
    machine: true
    resource_class: bgmorton/runner-test # Update this to reflect your self-hosted runner resource class details
    # For running on CircleCI's compute resources
    # docker:
    #   - image: cimg/python:3.11.4
    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: /tmp/workspace
      - run:
          command: python3 ./ml/5_deploy.py
          name: Deploy the model
  test-deployment:
    # For running on CircleCI's self-hosted runners - details taken from environment variables
    machine: true
    resource_class: bgmorton/runner-test # Update this to reflect your self-hosted runner resource class details
    # For running on CircleCI's compute resources
    # docker:
    #   - image: cimg/python:3.11.4
    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: /tmp/workspace
      - run:
          command: python3 ./ml/1_build.py
          name: Rebuild test data
      - wait-5
      - run:
          command: python3 ./ml/7_test_deployed_model.py
          name: Test the deployed model

# Invoke jobs via workflows
# See: https://circleci.com/docs/workflows/
workflows:
  # This workflow does a full build from scratch, and deploys the model
  build-deploy:
    jobs:
      - install-build:
          filters:
            branches:
              only:
                - main # Only run the job when the main branch is updated
      - train-test-package:
          requires: # Only run the job when the preceding step in the ML process has completed so that they are run sequentially
            - install-build
      # Do not deploy without manual approval - you can inspect the console output from training and make sure you are happy to deploy
      - hold: # A job that will require manual approval in the CircleCI web application.
          requires: 
            - train-test-package 
          type: approval # This key-value pair will set your workflow to a status of "On Hold"
      - deploy:
          requires: 
            - hold 
      - test-deployment:
          requires:
            - deploy
  retrain-deploy:
      # Trigger on a schedule or when retrain branch is updated
      triggers:
        - schedule:
            cron: "0 0 * * *" # Daily
            filters:
              branches:
                only:
                  - retrain
      jobs:
        - install-build:
            filters:
              branches:
                only:
                  - retrain
        - retrain-package:
            requires:
              - install-build
        # Do not deploy without manual approval - you can inspect the console output from training and make sure you are happy to deploy
        - hold: # A job that will require manual approval in the CircleCI web application.
            requires: 
              - retrain-package
            type: approval # This key-value pair will set your workflow to a status of "On Hold"
        - deploy:
            requires:
              - hold
        - test-deployment:
            requires:
              - deploy

